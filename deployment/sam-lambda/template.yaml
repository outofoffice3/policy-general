AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  policy-general-2023

  AWS SAM Template to deploy lambda function

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    MemorySize: 256

    Tracing: Active
Resources:
  AWSConfigRuleLambda:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: ../../
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
      - arm64
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          CONFIG_FILE_BUCKET_NAME: policy-general-2023
          CONFIG_FILE_KEY : config.json
          AWS_ACCOUNT_ID : 033197602013
      Policies:
        Statement:
          - Sid: "CloudWatchLogs"
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"

          - Sid: "XRay"
            Effect: "Allow"
            Action:
              - "xray:PutTelemetryRecords"
              - "xray:PutTraceSegments"
            Resource: "*"

          - Sid: "S3BucketAccess"
            Effect: "Allow"
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
            Resource: "*"

          - Sid: "IAMActions"
            Effect: "Allow"
            Action:
              - "iam:ListUsers"
              - "iam:ListRoles"
              - "iam:ListAttachedUserPolicies"
              - "iam:ListAttachedRolePolicies"
            Resource: "*"

          - Sid: "ConfigAndAccessAnalyzer"
            Effect: "Allow"
            Action:
              - "config:PutEvaluations"
              - "access-analyzer:CheckAccessNotGranted"
            Resource: "*"

          - Sid: "GetCallerIdentity"
            Effect: "Allow"
            Action:
              - "sts:GetCallerIdentity"
            Resource: "*"
  CustomConfigRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: checkNoAccessPolicyGeneral2023
      Description: Checks IAM identity policies for restricted actions. 
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !GetAtt AWSConfigRuleLambda.Arn
        SourceDetails:
          - EventSource: aws.config
            MessageType: ScheduledNotification
      InputParameters: {}  # You can specify input parameters if needed
      MaximumExecutionFrequency: TwentyFour_Hours  # Adjust as needed

Outputs:
  AWSConfigRuleLambda:
    Description: Lambda function ARN
    Value: !GetAtt AWSConfigRuleLambda.Arn